# TODO: review bindings
gui:
    # stuff relating to the UI
    windowSize: 'normal' # one of 'normal' | 'half' | 'full' default is 'normal'
    scrollHeight: 2 # how many lines you scroll by
    scrollPastBottom: true # enable scrolling past the bottom
    scrollOffMargin: 2 # how many lines to keep before/after the cursor when it reaches the top/bottom of the view; see 'Scroll-off Margin' section below
    scrollOffBehavior: 'margin' # one of 'margin' | 'jump'; see 'Scroll-off Margin' section below
    sidePanelWidth: 0.3 # number from 0 to 1
    expandFocusedSidePanel: true
    mainPanelSplitMode: 'horizontal' # one of 'horizontal' | 'flexible' | 'vertical'
    language: 'en' # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl'
    timeFormat: '02 Jan 06' # https://pkg.go.dev/time#Time.Format
    shortTimeFormat: '3:04PM'
    commitLength:
        show: true
    mouseEvents: true
    skipDiscardChangeWarning: true
    skipStashWarning: false
    showFileTree: true # for rendering changes files in a tree format
    showListFooter: false # for seeing the '5 of 20' message in list panels
    showRandomTip: false
    showBranchCommitHash: false # show commit hashes alongside branch names
    showBottomLine: true # for hiding the bottom information line (unless it has important information to tell you)
    showPanelJumps: true # for showing the jump-to-panel keybindings as panel subtitles
    showCommandLog: false
    showIcons: false # deprecated: use nerdFontsVersion instead
    nerdFontsVersion: "3" # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons
    commandLogSize: 0
    splitDiff: 'auto' # one of 'auto' | 'always'
    skipRewordInEditorWarning: false # for skipping the confirmation before launching the reword editor
    border: 'rounded' # one of 'single' | 'double' | 'rounded' | 'hidden'
    animateExplosion: true # shows an explosion animation when nuking the working tree
    ####################################################################################################
    theme:
        lightTheme: false # For terminals with a light background
        activeBorderColor:
            - white
            - bold
        inactiveBorderColor:
            - green
        searchingActiveBorderColor:
            - cyan
            - bold
        optionsTextColor:
            - blue
        selectedLineBgColor:
            - default
        selectedRangeBgColor:
            - blue
        cherryPickedCommitBgColor:
            - blue
        cherryPickedCommitFgColor:
            - cyan
        unstagedChangesColor:
            - red
        defaultFgColor:
            - default
####################################################################################################
git:
  paging:
    colorArg: always
    pager: delta --dark --paging never
    commit:
        signOff: false
    merging:
        # only applicable to unix users
        manualCommit: false
        # extra args passed to `git merge`, e.g. --no-ff
        args: ''
    log:
        # one of date-order, author-date-order, topo-order.
        # topo-order makes it easier to read the git log graph, but commits may not
        # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
        order: 'topo-order'
        # one of always, never, when-maximised
        # this determines whether the git graph is rendered in the commits panel
        showGraph: 'when-maximised'
        # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
        showWholeGraph: false
    skipHookPrefix: WIP
    # The main branches. We colour commits green if they belong to one of these branches,
    # so that you can easily see which commits are unique to your branch (coloured in yellow)
    mainBranches: [master, main]
    autoFetch: false
    autoRefresh: true
    fetchAll: true # Pass --all flag when running git fetch. Set to false to fetch only origin (or the current branch's upstream remote if there is one)
    branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
    allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
    overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
    disableForcePushing: false
    parseEmoji: false
    diffContextSize: 5 # how many lines of context are shown around a change in diffs
####################################################################################################
os:
    copyToClipboardCmd: '' # See 'Custom Command for Copying to Clipboard' section
    editPreset: '' # see 'Configuring File Editing' section
    edit: 'micro {{filename}}'
    editAtLine: ''
    editAtLineAndWait: ''
    open: ''
    openLink: ''
####################################################################################################
refresher:
    refreshInterval: 10 # file/submodule refresh interval in seconds
    fetchInterval: 60 # re-fetch interval in seconds
####################################################################################################
update:
    method: never # can be: prompt | background | never
    days: 0 # how often an update is checked for
####################################################################################################
reporting: 'undetermined' # one of: 'on' | 'off' | 'undetermined'
####################################################################################################
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
####################################################################################################
quitOnTopLevelReturn: false
####################################################################################################
disableStartupPopups: false
####################################################################################################
notARepository: 'prompt' # one of: 'prompt' | 'create' | 'skip'
####################################################################################################
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
####################################################################################################

keybinding:
    universal:
        quit: 'Q'
        quit-alt1: '<c-c>'              # '<c-c>' alternative/alias of quit
        return: '<esc>'                 # return to previous menu, will quit if there's nowhere to return
        quitWithoutChangingDirectory: 'q'
        togglePanel: '<tab>'            # goto the next panel
        prevItem: null                  # '<up>' go one line up
        nextItem: null                  # '<down>' go one line down
        prevItem-alt: '<up>'            # 'k' go one line up
        nextItem-alt: '<down>'          # 'j' go one line down
        # TODO: prevPage: '<c-b>' '<a-up>'               # go to next page in list               # mapped -> `alt-up`
        # TODO: nextPage: '<c-f>' '<a-down>'              # go to previous page in list           # mapped -> `alt-down`
        gotoTop: '<c-o>'                # '<' go to top of list                 # mapped -> `cmd-up`
        gotoBottom: '<c-p>'             # '>' go to bottom of list              # mapped -> `cmd-down`
        scrollLeft: 'H'                 # scroll left within list view
        scrollRight: 'L'                # scroll right within list view
        prevBlock: null                 # '<left>' goto the previous block / panel
        nextBlock: null                 # '<right>' goto the next block / panel
        prevBlock-alt: <c-v>            # 'h' goto the previous block / panel   # mapped -> `ctrl-cmd-up`
        nextBlock-alt: <c-x>            # 'l' goto the next block / panel       # mapped -> `ctrl-cmd-down`
        jumpToBlock: [1, 2, 3, 4, 5]    # goto the Nth block / panel
        nextMatch: 'l'                  # 'n'
        prevMatch: 'h'                  # 'N'
        optionMenu: null                # show help menu
        optionMenu-alt1: '?'            # show help menu
        select: '<space>'
        goInto: '<enter>'
        # TODO: openRecentRepos: '|' '<ctrl-cmd-space>' '<c-space>'           # '<c-r>'
        confirm: '<enter>'
        remove: 'd'
        new: 'n'
        edit: 'e'
        openFile: null                  # 'o'
        scrollUpMain: null              # '<pgup>' main panel scroll up
        scrollDownMain: null            # 'pgdown' main panel scroll down
        scrollUpMain-alt1: null         # 'K' main panel scroll up
        scrollDownMain-alt1: null       # 'J' main panel scroll down
        scrollUpMain-alt2: 'k'          # '<c-u>' main panel scroll up
        scrollDownMain-alt2: 'j'        # '<c-d>' main panel scroll down
        # executeCustomCommand: '<c-s>' '<c-g>'                                           # mapped -> `alt-enter`
        createRebaseOptionsMenu: 'm'
        pushFiles: 'P'
        pullFiles: 'p'
        refresh: 'r'
        createPatchOptionsMenu: 'N'     # '<c-p>'
        # TODO: prevTab: '<c-j>' '<ctrl-cmd-left>'               # '['                                   # mapped -> `ctrl-cmd-left`
        # TODO: nextTab: '<c-n>' '<ctrl-cmd-right>'               # ']'                                   # mapped -> `ctrl-cmd-right`
        # TODO: nextScreenMode: '\' <tab>            # '+'
        prevScreenMode: null            # '_'
        undo: 'u'                       # 'z'
        redo: 'U'                       # '<c-z>'
        # TODO: filteringMenu: <c-r> '?'           # '<c-s>'                               # mapped -> `ctrl-enter`
        diffingMenu: 'W'
        # diffingMenu-alt: '<c-e>'      # deprecated
        copyToClipboard: 'y'            # '<c-o>'
        submitEditorText: '<enter>'
        # TODO: extrasMenu: '<c-t>' 'null'                                                    # mapped -> `cmd-enter`
        toggleWhitespaceInDiffView: null
        increaseContextInDiffView: '='  # '}'
        decreaseContextInDiffView: '-'  # '{'
    status:
        checkForUpdate: 'u'
        recentRepos: '<enter>'
    files:
        commitChanges: 'c'
        commitChangesWithoutHook: 'w'   # commit changes without pre-commit hook
        amendLastCommit: 'A'
        commitChangesWithEditor: 'C'
        confirmDiscard: 'x'
        ignoreFile: 'i'
        refreshFiles: 'r'
        stashAllChanges: 's'
        viewStashOptions: 'S'
        # TODO: toggleStagedAll: '<c-y>'            # stage/unstage all
        viewResetOptions: 'D'
        fetch: 'f'
        # TODO: toggleTreeView: '<c-g>' '\'         # '`'                                   # mapped -> `shift-enter`
        openMergeTool: 'M'
        # TODO: openStatusFilter: '<c-r>'                                               # mapped -> `ctrl-enter`
    branches:
        createPullRequest: 'u'          # 'o'
        viewPullRequestOptions: 'U'     # 'O'
        checkoutBranchByName: 'c'
        forceCheckoutBranch: 'F'
        rebaseBranch: 'r'
        renameBranch: 'R'
        mergeIntoCurrentBranch: 'M'
        viewGitFlowOptions: 'i'
        fastForward: 'f'                # fast-forward this branch from its upstream
        createTag: 'T'
        pushTag: 'P'
        setUpstream: 'u'                # set as upstream of checked-out branch
        fetchRemote: 'f'
    commits:
        squashDown: 's'
        renameCommit: 'r'
        renameCommitWithEditor: 'R'
        viewResetOptions: 'g'
        markCommitAsFixup: 'f'
        createFixupCommit: 'F'          # create fixup commit for this commit
        squashAboveCommits: 'S'
        moveDownCommit: 'J'             # '<c-j>' move commit down one
        moveUpCommit: 'K'               # '<c-k>' move commit up one
        amendToCommit: 'A'
        pickCommit: 'p'                 # pick commit (when mid-rebase)
        revertCommit: 't'
        cherryPickCopy: 'c'
        cherryPickCopyRange: 'C'
        pasteCommits: 'v'
        tagCommit: 'T'
        checkoutCommit: '<space>'
        resetCherryPick: 'Y'            # '<c-R>'
        copyCommitMessageToClipboard: 'y' # '<c-y>'
        openLogMenu: 'L'                # '<c-l>'
        viewBisectOptions: 'b'
    stash:
        popStash: 's'                   # 'g'
        renameStash: 'r'
    commitFiles:
        checkoutCommitFile: 'c'
    main:
        toggleDragSelect: null          # 'v'
        toggleDragSelect-alt: 'v'       # 'V'
        toggleSelectHunk: 'a'
        pickBothHunks: 'b'
    submodules:
        init: 'i'
        update: 'u'
        bulkMenu: 'b'
