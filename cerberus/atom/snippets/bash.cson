
#------------------------------------------------------------------------------------------------------------------------------
#
# 888888b.         d8888  .d8888b.  888    888
# 888  "88b       d88888 d88P  Y88b 888    888
# 888  .88P      d88P888 Y88b.      888    888
# 8888888K.     d88P 888  "Y888b.   8888888888
# 888  "Y88b   d88P  888     "Y88b. 888    888
# 888    888  d88P   888       "888 888    888
# 888   d88P d8888888888 Y88b  d88P 888    888
# 8888888P" d88P     888  "Y8888P"  888    888
#
#------------------------------------------------------------------------------------------------------------------------------


'.source.shell':


  '#!/bin/sh':
    prefix: 'sh'
    body: '#!/bin/sh\n'

  '#!/bin/bash':
    prefix: 'bash'
    body: '#!/bin/bash\n'

  'function':
    prefix: 'function'
    body: """function ${1:name}(${2:parameter}) {
    \t${3:#statements}
    }"""

  'for count done':
    prefix: 'forc'
    body: """for (( ${1:i} = ${2:0}; ${1:i} < ${3:x}; ${1:i}++ ));
    do
    \t${0:#statements}
    done"""

  'for range done':
    prefix: 'forr'
    body: """for ${1:i} in {$2..$3};
    do
    \t${0:#statements}
    done"""

  'for array done':
    prefix: 'fora'
    body: """for ${1:i} in ${2:array[@]};
    do
    \t${0:#statements}
    done"""

  'for command':
    prefix: 'forcom'
    body: """for ${1:i} in $(${2:});
    do
    \t${0:#statements}
    done"""

  'for read':
    prefix: 'forread'
    body: """for ${1:i} in $( ${2:file} );
    do
    \t${0:#statements}
    done"""

  'if [[ ]] fi':
    prefix: 'ifl'
    body: """if ${2:[[ ${1:condition} ]]};
    then
    \t${0:#statements}
    fi"""

  'if (( )) fi':
    prefix: 'ifm'
    body: """if ${2:[[ ${1:condition} ]]};
    then
    \t${0:#statements}
    fi"""

  'case esac':
    prefix: 'case'
    body: """case ${1:word} in
    \t${2:pattern} )
    \t\t${3:actions}
    \t;;
    \t${4:pattern} )
    \t\t${5:actions}
    \t;;
    \t*)
    \t\t${6:default}
    \t;;
    esac"""

  'while':
    prefix: 'while'
    body: """while ${1:condition}
    do
    \t${0:#statements}
    done"""

  'while read':
    prefix: 'whiler'
    body: """while read ${1:variable}
    do
    \t${0:#statements}
    done < ${2:file}"""

'cat here-document':
  prefix: 'catTESTA'
  body: '`cat <<- TESTA
  ${$1:lineBreaks}
  \t${0:#message}
  ${$1:lineBreaks}
  TESTA`'


#------------------------------------------------------------------------------------------------------------------------------
#
# 8888888888 888b    888 8888888b.
# 888        8888b   888 888  "Y88b
# 888        88888b  888 888    888
# 8888888    888Y88b 888 888    888
# 888        888 Y88b888 888    888
# 888        888  Y88888 888    888
# 888        888   Y8888 888  .d88P
# 8888888888 888    Y888 8888888P"
#
#------------------------------------------------------------------------------------------------------------------------------
