gui:
    # stuff relating to the UI
    scrollHeight: 2 # how many lines you scroll by
    scrollPastBottom: true # enable scrolling past the bottom
    sidePanelWidth: 0.25 # number from 0 to 1
    expandFocusedSidePanel: false
    mainPanelSplitMode: 'horizontal' # one of 'horizontal' | 'flexible' | 'vertical'
    language: 'en' # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl'
    commitLength:
        show: true
    mouseEvents: true
    skipDiscardChangeWarning: false
    skipStashWarning: false
    showFileTree: true # for rendering changes files in a tree format
    showListFooter: false # for seeing the '5 of 20' message in list panels
    showRandomTip: false
    showCommandLog: false
    commandLogSize: 0
    ####################################################################################################
    theme:
        lightTheme: false # For terminals with a light background
        activeBorderColor:
            - white
            - bold
        inactiveBorderColor:
            - green
        optionsTextColor:
            - blue
        selectedLineBgColor:
            - default
        selectedRangeBgColor:
            - blue
        cherryPickedCommitBgColor:
            - blue
        cherryPickedCommitFgColor:
            - cyan
        unstagedChangesColor:
            - red
####################################################################################################
git:
    paging:
        colorArg: always
        useConfig: false
    commit:
        signOff: false
    merging:
        # only applicable to unix users
        manualCommit: false
        # extra args passed to `git merge`, e.g. --no-ff
        args: ''
    log:
        # one of date-order, author-date-order, topo-order.
        # topo-order makes it easier to read the git log graph, but commits may not
        # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
        order: 'topo-order'
        # one of always, never, when-maximised
        # this determines whether the git graph is rendered in the commits panel
        showGraph: 'when-maximised'
    skipHookPrefix: WIP
    autoFetch: false
    branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
    allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
    overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
    disableForcePushing: false
    parseEmoji: false
    diffContextSize: 5 # how many lines of context are shown around a change in diffs
####################################################################################################
os:
    editCommand: '' # see 'Configuring File Editing' section
    edit,EditAtLine: '{{editor}} {{filename}}'
    openCommand: ''
####################################################################################################
refresher:
    refreshInterval: 10 # file/submodule refresh interval in seconds
    fetchInterval: 60 # re-fetch interval in seconds
####################################################################################################
update:
    method: never # can be: prompt | background | never
    days: 0 # how often an update is checked for
####################################################################################################
reporting: 'undetermined' # one of: 'on' | 'off' | 'undetermined'
####################################################################################################
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close

####################################################################################################
quitOnTopLevelReturn: false
####################################################################################################
disableStartupPopups: false
####################################################################################################
notARepository: 'prompt' # one of: 'prompt' | 'create' | 'skip'
####################################################################################################
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
####################################################################################################

keybinding:
    universal:
        quit: 'q'
        quit-alt1: '<c-c>' # alternative/alias of quit
        return: '<esc>' # return to previous menu, will quit if there's nowhere to return
        quitWithoutChangingDirectory: 'Q'
        togglePanel: '<tab>' # goto the next panel
        prevItem: '<up>' # go one line up
        nextItem: '<down>' # go one line down
        prevPage: ',' # go to next page in list
        nextPage: '.' # go to previous page in list
        gotoTop: 'g' # go to top of list
        gotoBottom: 'G' # go to bottom of list
        scrollLeft: 'H' # scroll left within list view
        scrollRight: 'L' # scroll right within list view
        prevBlock: '<left>' # goto the previous block / panel
        nextBlock: '<right>' # goto the next block / panel
        jumpToBlock: ['1', '2', '3', '4', '5'] # goto the Nth block / panel
        nextMatch: 'l'
        prevMatch: 'h'
        optionMenu: '?' # show help menu
        select: '<space>'
        goInto: '<enter>'
        openRecentRepos: 't'
        confirm: '<enter>'
        remove: 'd'
        new: 'n'
        edit: 'e'
        openFile: 'o'
        scrollUpMain: 'k' # main panel scroll up
        scrollDownMain: 'j' # main panel scroll down
        executeCustomCommand: ':'
        createRebaseOptionsMenu: 'M'
        pushFiles: 'P'
        pullFiles: 'p'
        refresh: 'R'
        createPatchOptionsMenu: '<c-p>'
        nextTab: ']'
        prevTab: '['
        nextScreenMode: '='
        prevScreenMode: '-'
        undo: 'o'
        redo: 'O'
        filteringMenu: '<c-s>'
        diffingMenu: 'w'
        copyToClipboard: 'y'
        submitEditorText: '<enter>'
        appendNewline: 'm'
        extrasMenu: '@'
        toggleWhitespaceInDiffView: 'W'
        increaseContextInDiffView: '}'
        decreaseContextInDiffView: '{'
    status:
        checkForUpdate: 'u'
        recentRepos: '<enter>'
    files:
        commitChanges: 'c'
        commitChangesWithoutHook: 'T' # commit changes without pre-commit hook
        amendLastCommit: 'A'
        commitChangesWithEditor: 'C'
        ignoreFile: 'i'
        refreshFiles: 'r'
        stashAllChanges: 's'
        viewStashOptions: 'S'
        toggleStagedAll: 'a' # stage/unstage all
        viewResetOptions: 'D'
        fetch: 'f'
        toggleTreeView: '\'
    branches:
        createPullRequest: 's'
        viewPullRequestOptions: 'S'
        checkoutBranchByName: 'c'
        forceCheckoutBranch: 'C'
        rebaseBranch: 'r'
        mergeIntoCurrentBranch: 'm'
        viewGitFlowOptions: 'i'
        fastForward: 'F' # fast-forward this branch from its upstream
        pushTag: 'T'
        setUpstream: 'u' # set as upstream of checked-out branch
        fetchRemote: 'f'
    commits:
        squashDown: 's'
        renameCommit: 'r'
        renameCommitWithEditor: 'R'
        viewResetOptions: 'i'
        markCommitAsFixup: 'f'
        createFixupCommit: 'F' # create fixup commit for this commit
        squashAboveCommits: 'S'
        moveDownCommit: '<c-j>' # move commit down one
        moveUpCommit: '<c-k>' # move commit up one
        amendToCommit: 'A'
        pickCommit: 'e' # pick commit (when mid-rebase)
        revertCommit: 't'
        cherryPickCopy: 'c'
        cherryPickCopyRange: 'C'
        pasteCommits: 'v'
        tagCommit: 'T'
        checkoutCommit: '<space>'
        resetCherryPick: 'E'
        copyCommitMessageToClipboard: 'y'
        openLogMenu: 'm'
        viewBisectOptions: 'b'
    stash:
        popStash: 's'
    commitFiles:
        checkoutCommitFile: 'c'
    main:
        toggleDragSelect: 'v'
        toggleSelectHunk: 'a'
        pickBothHunks: 'b'
    submodules:
        init: 'i'
        update: 'u'
        bulkMenu: 'b'
